#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ callback_data –∫–Ω–æ–ø–æ–∫
"""

def test_callback_data_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ callback_data"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ callback_data –∫–Ω–æ–ø–æ–∫...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω—Ü–∏–π
    test_stations = [
        {"name": "–ú–æ—Å–∫–≤–∞ –ö–∞–∑–∞–Ω—Å–∫–∞—è (–ö–∞–∑–∞–Ω—Å–∫–∏–π –≤–æ–∫–∑–∞–ª)", "expressCode": "2000003"},
        {"name": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥-–ì–ª–∞–≤–Ω—ã–π (–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –≤–æ–∫–∑–∞–ª)", "expressCode": "2004001"},
        {"name": "–ö–∞–∑–∞–Ω—å –ü–∞—Å—Å", "expressCode": "2060500"},
        {"name": "–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤", "expressCode": "1234567"},
        {"name": "–°—Ç–∞–Ω—Ü–∏—è —Å —Å–∏–º–≤–æ–ª–∞–º–∏: ()-_,.!@#$%", "expressCode": "9999999"}
    ]
    
    for i, station in enumerate(test_stations, 1):
        station_name = station.get('name', '')
        station_code = station.get('expressCode', '')
        
        print(f"\n{i}. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞–Ω—Ü–∏—é: {station_name}")
        
        # –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        clean_name = station_name.replace('(', '').replace(')', '').replace('-', ' ').replace('_', ' ')
        clean_name = clean_name[:30]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        
        # –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π callback_data
        callback_data = f"station_{station_code}_{clean_name}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É callback_data (–ª–∏–º–∏—Ç Telegram - 64 –±–∞–π—Ç–∞)
        callback_bytes = len(callback_data.encode('utf-8'))
        
        print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {station_name}")
        print(f"   –û—á–∏—â–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {clean_name}")
        print(f"   Callback data: {callback_data}")
        print(f"   –†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö: {callback_bytes}")
        
        if callback_bytes <= 64:
            print(f"   ‚úÖ –í–∞–ª–∏–¥–Ω—ã–π callback_data")
        else:
            # –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–¥
            fallback_callback = f"station_{station_code}"
            fallback_bytes = len(fallback_callback.encode('utf-8'))
            print(f"   ‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback: {fallback_callback}")
            print(f"   Fallback —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö: {fallback_bytes}")
            
            if fallback_bytes <= 64:
                print(f"   ‚úÖ Fallback –≤–∞–ª–∏–¥–Ω—ã–π")
            else:
                print(f"   ‚ùå Fallback —Ç–æ–∂–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π!")

def test_callback_data_parsing():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ callback_data"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ callback_data...")
    
    test_callbacks = [
        "station_2000003_–ú–æ—Å–∫–≤–∞ –ö–∞–∑–∞–Ω—Å–∫–∞—è",
        "station_2004001_–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥-–ì–ª–∞–≤–Ω—ã–π",
        "station_2060500_–ö–∞–∑–∞–Ω—å –ü–∞—Å—Å",
        "station_1234567",  # –¢–æ–ª—å–∫–æ –∫–æ–¥
        "invalid_format",
        "station_",  # –ù–µ–ø–æ–ª–Ω—ã–π
    ]
    
    for callback in test_callbacks:
        print(f"\n–¢–µ—Å—Ç–∏—Ä—É–µ–º callback: {callback}")
        
        try:
            if callback.startswith("station_"):
                parts = callback.split("_", 2)
                if len(parts) >= 2:
                    station_code = parts[1]
                    station_name = parts[2] if len(parts) > 2 else station_code
                    print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–æ:")
                    print(f"      –ö–æ–¥: {station_code}")
                    print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {station_name}")
                else:
                    print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∞—Å—Ç–µ–π")
            else:
                print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 'station_'")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ callback_data")
    print("=" * 50)
    
    test_callback_data_validation()
    test_callback_data_parsing()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")



